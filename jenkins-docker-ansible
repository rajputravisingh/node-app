pipeline{
    agent any
    environment
    {
        DOCKER_TAG = getDockertag()
    }
        stages{
            stage('Code checkout')
            {
                steps
                {
                   git credentialsId: 'GitHub', url: 'https://github.com/rajputravisingh/node-app.git'
                }
            }
            stage('Docker-Build')
            {
                steps
                {
                   sh 'docker build . -t rajputmarch2020/nodeapp:${DOCKER_TAG}' 
                }
            }
            
            stage('DockerHub-image-push'){
            steps{
                withCredentials([string(credentialsId: 'dockerhub', variable: 'password')]) {
                sh 'docker login -u rajputmarch2020 -p ${password} '
                }
                sh 'docker push rajputmarch2020/nodeapp:${DOCKER_TAG}'
            }
        }
        
        stage('Kubernetes-Deployment')
            {
                steps
                {
                    sh " chmod +x changeTag.sh "
                    sh " ./changeTag.sh ${DOCKER_TAG}"
                    sshagent(['k8s-master']) {
                      sh " scp -o StrictHostKeyChecking=no services.yml node-app-pod.yml root@10.128.0.13:/root"
                      script{
                         try{
                            sh "ssh root@10.128.0.13 kubectl apply -f . "
                            }
                            catch(error){
                              sh "root@10.128.0.13 kubectl create -f ."
                            }
                  }
                }
            }
        }
    }

def getDockertag()
{
    def tag = sh returnStdout: true, script: 'git rev-parse HEAD'
    return tag

}




